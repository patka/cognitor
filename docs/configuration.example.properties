## Security configuration
# This is the salt that is used for the calculation of the hash
# of the security cookie. You absolutely need to change this!
securityCookie.hashing.salt=YOU_DEFINITELY_WANT_TO_CHANGE_ME!
# The name of the cookie that will be used. Be sure its name is
# unique on the configured path and domain. If it is overwritten
# by other applications, it result in bugs that are fun to find
securityCookie.name=context
# domain that will be set on the cookie. Leaving it empty means
# that the browser returns the cookie to the server it received
# it from
securityCookie.domain=
# the path the cookie will be returned to (and below)
securityCookie.path=/
# set the secure flah on the cookie. If set the cookie will only
# be returned if the transport layer is secured (https)
securityCookie.sslOnly=false
# how long will the cookie considered to be valid. After this
# amount if inactivity the user has to login again
securityCookie.sessionDuration=1800

# configures which kind of password hashing to use. The implementations
# expect that password and the salt to be stored in the same field
# so there is no extra salt property on the domain object
#
# current available values are:
# bcrypt
# sha_256
# no_nash
password.hashAlgorithm=sha_256

# SECTION JDBC
# Specifies the name of the jdbc driver class. Please refer to the documentation
# of your JDBC driver to get the right class name here
jdbc.driverClass=org.hsqldb.jdbc.JDBCDriver

# The url that should be used to connect to the database
jdbc.url=jdbc:hsqldb:mem:sso

# The username to connect to the database
jdbc.username=sa

# The password to use to connect to the database
jdbc.password=

# SECTION Hibernate & JPA
# Specifies the dialect hibernate uses with the database.
# a list with possible values can be found here:
# http://docs.jboss.org/hibernate/orm/4.1/manual/en-US/html/ch03.html#configuration-optional-dialects
# I guess most common are:
# org.hibernate.dialect.PostgreSQL82Dialect
# org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.dialect=org.hibernate.dialect.HSQLDialect

# specify what hibernate should do with the database on startup
# posssible values are:
# validate - validate if the mapping matches the database structure
# update - update the database structure to match the mapping
# create - create the database structure based on mapping information
# create-drop - same as create but drops the database of the SessionFactory is closed
hibernate.hbm2ddl.auto=update

# for JPA the database type must be specified again
# possible values are:
# DB2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE
jpaVendorAdapter.database=HSQL