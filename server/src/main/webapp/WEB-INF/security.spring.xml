<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="UTF-8" />
        <property name="locations">
            <array>
                <value>classpath:configuration.properties</value>
            </array>
        </property>
    </bean>

    <context:component-scan base-package="org.cognitor.server"/>

    <security:http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint"
                   security-context-repository-ref="cookieSecurityContextRepository" create-session="never">
        <security:intercept-url pattern="/registrationsuccess/**" access="ROLE_USER"/>
        <security:intercept-url pattern="/account/**" access="ROLE_USER" />
        <security:intercept-url pattern="/sso" access="ROLE_ANONYMOUS, ROLE_USER"/>
        <security:custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/" delete-cookies="context" />
    </security:http>

    <bean id="cookieSecurityContextRepository" class="org.cognitor.server.platform.web.security.context.CookieSecurityContextRepository">
        <constructor-arg>
            <bean class="org.cognitor.server.platform.web.security.context.SecurityCookieMarshaller">
                <constructor-arg>
                    <bean class="org.cognitor.server.platform.web.security.context.SecurityContextSerializer" />
                </constructor-arg>
                <constructor-arg>
                    <bean class="org.cognitor.server.platform.web.security.context.Sha512Hash">
                        <constructor-arg value="${securityCookie.hashing.salt}" />
                    </bean>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <property name="cookieName" value="${securityCookie.name}"/>
        <property name="cookieDomain" value="${securityCookie.domain}"/>
        <property name="cookiePath" value="${securityCookie.path}"/>
        <property name="cookieSecure" value="${securityCookie.sslOnly}"/>
        <property name="sessionDurationSeconds" value="${securityCookie.sessionDuration}"/>
    </bean>

    <bean id="serializer"
          class="org.cognitor.server.platform.web.security.context.SecurityContextSerializer"/>

    <bean id="loginUrlAuthenticationEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/" />
    </bean>

    <bean id="authenticationFilter"
          class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="filterProcessesUrl" value="/login" />
        <property name="usernameParameter" value="username" />
        <property name="passwordParameter" value="password" />
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationSuccessHandler">
            <bean class="org.cognitor.server.openid.web.security.OpenIdAuthenticationSuccessHandler">
                <constructor-arg ref="openIdManager" />
                <property name="defaultTargetUrl" value="/loginSuccess.html" />
            </bean>
        </property>
        <property name="allowSessionCreation" value="false" />
        <property name="authenticationFailureHandler">
            <bean class="org.cognitor.server.platform.web.security.RequestQueryAwareAuthenticationFailureHandler"/>
        </property>
    </bean>

    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="UserServiceImpl" />
        <property name="passwordEncoder" ref="passwordEncoder" />
    </bean>

    <bean id="passwordEncoder" class="org.cognitor.server.platform.security.password.PasswordEncoderFactory"
          factory-method="getPasswordEncoder" >
        <constructor-arg index="0" value="${password.hashAlgorithm}" />
    </bean>

    <security:authentication-manager alias="authenticationManager" erase-credentials="true">
        <security:authentication-provider ref="daoAuthenticationProvider" />
    </security:authentication-manager>
</beans>